.corner-image {
    width: 8%;
    object-fit: scale-down;
}

.center-image {
    width: 40%;
    object-fit: scale-down;
}

.center-image:nth-of-type(1) {
    position: fixed;
    top: 0;
    left: 30%;
}

.center-image:nth-of-type(2) {
    position: fixed;
    bottom: 0;
    left: 30%;
}

.top-left.corner-image {
    position: fixed;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 15%;
}

.top-right.corner-image {
    position: fixed;
    right: 0;
    top: 0;
}

.bottom-left.corner-image {
    position: fixed;
    left: 0;
    bottom: 0;
}

.bottom-right.corner-image {
    position: fixed;
    right: 0;
    bottom: 50%;
    transform: translateY(50%) scale(-1);
    width: 15%;
}

.header {
    width: 100%; 
    text-align: center; 
    padding: 1rem 0; 
    box-sizing: border-box;
    position: fixed;
    top: -30px;
    left: 0;
    z-index: 1000; 
}

.header a {
    display: inline-block; 
    line-height: 0; 
    padding: 0;
}

.header img {
    width: 200px; 
    height: auto;
    position: relative;
    top: 10px; }



.form-container {
    display: relative;
    background-image: none;
    height: auto;
    width: 93%;
    padding: 2rem;
    margin: 2rem auto;
    border-radius: 1.5rem;
    background-color: #f6f3e9;
    position: fixed;
    top: 30%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.log-in-header,
.register-header {
    background-image: none;
    font-weight: 500;
    margin-bottom: 1.5rem;
}

.form {
    display: grid;
    gap: 30px;
    grid-template-columns: repeat(4, minmax(0, 1fr));
}

.form div {
    grid-column: span 4;
}

.form.nonmobile div {
    grid-column: undefined;
}

.loginForm {
    position: fixed;
    top: 5%;
}

.loginContainerDiv {
    display: grid;
    gap: 30px;
    grid-template-columns: repeat(4, minmax(0, 1fr));
}

.loginContainerDiv > div {
    grid-column: span 4;
}

.link {
    position: relative;
    top: 5px;
}

.form-box {
    position: absolute;
}

.form-component {
    position: relative;
}

.rotate-once-c {
    animation: rotateAnimationClockwise 2s ease-in-out;
    animation-iteration-count: 1;
}

.rotate-once-cc {
    animation: rotateAnimationCounterClockwise 2s ease-in-out;
    animation-iteration-count: 1;
}
